#### Contents of the preconfiguration file (for squeeze)
### Localization
## Preseeding only locale sets language, country and locale.
d-i debian-installer/locale string en_US
d-i debian-installer/language string en
d-i debian-installer/country string Europe/Germany
d-i debian-installer/locale string en_US.UTF-8
## Optionally specify additional locales to be generated.
d-i localechooser/supported-locales en_US.UTF-8

## Keyboard selection.
## Disable automatic (interactive) keymap detection.
d-i console-setup/ask_detect boolean false
d-i keyboard-configuration/modelcode string pc105
d-i keyboard-configuration/layoutcode string us
## To select a variant of the selected layout (if you leave this out, the
## basic form of the layout will be used):
##d-i keyboard-configuration/variantcode string dvorak

### Network configuration
## Disable network configuration entirely. This is useful for cdrom
## installations on non-networked devices where the network questions,
## warning and long timeouts are a nuisance.
d-i netcfg/enable boolean false

## netcfg will choose an interface that has link if possible. This makes it
## skip displaying a list if there is more than one interface.
d-i netcfg/choose_interface select auto

## If you have a slow dhcp server and the installer times out waiting for
## it, this might be useful.
##d-i netcfg/dhcp_timeout string 60

## If you prefer to configure the network manually, uncomment this line and
## the static network configuration below.
d-i netcfg/disable_autoconfig boolean true
d-i netcfg/use_autoconfig boolean false

## If you want the preconfiguration file to work on systems both with and
## without a dhcp server, uncomment these lines and the static network
## configuration below.
##d-i netcfg/dhcp_failed note
##d-i netcfg/dhcp_options select Configure network manually

## Static network configuration.

d-i netcfg/get_nameservers string #echo " ".join($name_servers)
d-i netcfg/get_ipaddress string $ip_address_eth0
d-i netcfg/get_netmask string $netmask_eth0
d-i netcfg/get_gateway string $gateway
d-i netcfg/confirm_static boolean true

## Any hostname and domain names assigned from dhcp take precedence over
## values set here. However, setting the values still prevents the questions
## from being shown, even if values come from dhcp.
d-i netcfg/get_hostname string $hostname
d-i netcfg/get_domain string unassigned-domain


###### Mirror settings
## If you select ftp, the mirror/country string does not need to be set.
##d-i mirror/protocol string ftp
##d-i choose-mirror/country string manual
##d-i choose-mirror/http/hostname string $server
##d-i choose-mirror/http/directory string $directory
##d-i choose-mirror/http/proxy string $proxy
d-i choose-mirror/http/proxy string

d-i mirror/country string manual
d-i mirror/http/hostname string de.archive.ubuntu.com
d-i mirror/http/directory string /ubuntu
##d-i mirror/http/proxy string $proxy
d-i mirror/http/proxy string $apt_cacher

## Suite to install.
d-i mirror/suite string trusty
## Suite to use for loading installer components (optional).
##d-i mirror/udeb/suite string squeeze
## Components to use for loading installer components (optional).
##d-i mirror/udeb/components multiselect main, restricted

###### Clock and time zone setup
## Controls whether or not the hardware clock is set to UTC.
d-i clock-setup/utc boolean true

## You may set this to any valid setting for $TZ; see the contents of
## /usr/share/zoneinfo/ for valid values.
d-i time/zone string Europe/Berlin

## Controls whether to use NTP to set the clock during the install
d-i clock-setup/ntp boolean true
## NTP server to use. The default is almost always fine here.
d-i clock-setup/ntp-server string $ntp_server

###### Partitioning
#### Partitioning example
## If the system has free space you can choose to only partition that space.
## This is only honoured if partman-auto/method (below) is not set.
## Alternatives: custom, some_device, some_device_crypto, some_device_lvm.
##d-i partman-auto/init_automatically_partition select biggest_free

## Alternatively, you may specify a disk to partition. If the system has only
## one disk the installer will default to using that, but otherwise the device
## name must be given in traditional, non-devfs format (so e.g. /dev/hda or
## /dev/sda, and not e.g. /dev/discs/disc0/disc).
## For example, to use the first SCSI/SATA hard disk:
d-i partman-auto/disk string /dev/sda
## In addition, you'll need to specify the method to use.
## The presently available methods are:
## - regular: use the usual partition types for your architecture
## - lvm:     use LVM to partition the disk
## - crypto:  use LVM within an encrypted partition
d-i partman-auto/method string lvm

## If one of the disks that are going to be automatically partitioned
## contains an old LVM configuration, the user will normally receive a
## warning. This can be preseeded away...
d-i partman-lvm/device_remove_lvm boolean true
## The same applies to pre-existing software RAID array:
d-i partman-md/device_remove_md boolean true
## And the same goes for the confirmation to write the lvm partitions.
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true

## For LVM partitioning, you can select how much of the volume group to use
## for logical volumes.
d-i partman-auto-lvm/guided_size string max
##d-i partman-auto-lvm/guided_size string 10GB
##d-i partman-auto-lvm/guided_size string 50%

## You can choose one of the three predefined partitioning recipes:
## - atomic: all files in one partition
## - home:   separate /home partition
## - multi:  separate /home, /usr, /var, and /tmp partitions
##d-i partman-auto/choose_recipe select atomic

## Or provide a recipe of your own...
## If you have a way to get a recipe file into the d-i environment, you can
## just point at it.
##d-i partman-auto/expert_recipe_file string /hd-media/recipe

## If not, you can put an entire recipe into the preconfiguration file in one
## (logical) line. This example creates a small /boot partition, suitable
## swap, and uses the rest of the space for the root partition:
##d-i partman-auto/expert_recipe string \

##########################################################
d-i     partman-auto/choose_recipe select boot-root
d-i     partman-auto-lvm/new_vg_name string $name
d-i     partman-auto/expert_recipe string        \
           boot-root ::                          \
             19000 50 20000 ext4                 \
                $defaultignore{ }                \
                $lvmok{ }                        \
                lv_name{ root }                  \
                method{ format }                 \
                format{ }                        \
                use_filesystem{ }                \
                filesystem{ ext4 }               \
                mountpoint{ / }                  \
             .                                   \
             2048 60 2048 swap                   \
                $defaultignore{ }                \
                $lvmok{ }                        \
                lv_name{ swap }                  \
                method{ swap }                   \
                format{ }                        \
            .
########################################################


## If you just want to change the default filesystem from ext3 to something
## else, you can do that without providing a full recipe.
##d-i partman/default_filesystem string ext4

## The full recipe format is documented in the file partman-auto-recipe.txt
## included in the 'debian-installer' package or available from D-I source
## repository. This also documents how to specify settings such as file
## system labels, volume group names and which physical devices to include
## in a volume group.

## This makes partman automatically partition without confirmation, provided
## that you told it what to do using one of the methods above.
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

## This makes partman automatically partition without confirmation.
##d-i partman-md/confirm boolean true
##d-i partman-partitioning/confirm_write_new_label boolean true
##d-i partman/choose_partition select finish
##d-i partman/confirm boolean true
##d-i partman/confirm_nooverwrite boolean true

#### Controlling how partitions are mounted
## The default is to mount by UUID, but you can also choose "traditional" to
## use traditional device names, or "label" to try filesystem labels before
## falling back to UUIDs.
##d-i partman/mount_style select uuid

###### Base system installation
## Configure APT to not install recommended packages by default. Use of this
## option can result in an incomplete system and should only be used by very
## experienced users.
d-i base-installer/install-recommends boolean false

## The kernel image (meta) package to be installed; "none" can be used if no
## kernel is to be installed.
d-i base-installer/kernel/image string linux-virtual

###### Account setup
## Skip creation of a root account (normal user account will be able to
## use sudo). The default is false; preseed this to true if you want to set
## a root password.
d-i passwd/root-login boolean true
## Alternatively, to skip creation of a normal user account.
d-i passwd/make-user boolean false

## Root password, either in clear text
##d-i passwd/root-password password root-me
##d-i passwd/root-password-again password root-me
## or encrypted using an MD5 hash.
d-i passwd/root-password-crypted password $root_password

###### Apt setup
## You can choose to install restricted and universe software, or to install
## software from the backports repository.
##d-i apt-setup/restricted boolean true
##d-i apt-setup/universe boolean true
##d-i apt-setup/backports boolean true
## Uncomment this if you don't want to use a network mirror.
d-i apt-setup/use_mirror boolean false
## Select which update services to use; define the mirrors to be used.
## Values shown below are the normal defaults.
##d-i apt-setup/services-select multiselect security
d-i apt-setup/security_host string security.ubuntu.com
d-i apt-setup/security_path string /ubuntu

## Additional repositories, local[0-9] available
## d-i apt-setup/local0/repository string $apt_cacher
##d-i apt-setup/local0/repository string \
##       http://local.server/ubuntu squeeze main
##d-i apt-setup/local0/comment string local server
## Enable deb-src lines
##d-i apt-setup/local0/source boolean true
## URL to the public key of the local repository; you must provide a key or
## apt will complain about the unauthenticated repository and so the
## sources.list line will be left commented out
##d-i apt-setup/local0/key string http://local.server/key

## By default the installer requires that repositories be authenticated
## using a known gpg key. This setting can be used to disable that
## authentication. Warning: Insecure, not recommended.
##d-i debian-installer/allow_unauthenticated boolean true

###### Package selection
##tasksel tasksel/first multiselect ubuntu-desktop
##tasksel tasksel/first multiselect lamp-server, print-server
##tasksel tasksel/first multiselect kubuntu-desktop
tasksel tasksel/first multiselect openssh-server
##tasksel tasksel/first multiselect virt-host

## Individual additional packages to install
##d-i pkgsel/include string openssh-server unzip ntp wget build-essential
d-i pkgsel/include string zsh emacs23-nox facter puppet scsitools unzip ntp autofs sysstat wget build-essential
## Whether to upgrade packages after debootstrap.
## Allowed values: none, safe-upgrade, full-upgrade
## d-i pkgsel/upgrade select none

## Language pack selection
d-i pkgsel/language-pack-patterns string
d-i pkgsel/install-language-support boolean false
##d-i pkgsel/language-packs multiselect de, en, zh

## Policy for applying updates. May be "none" (no automatic updates),
## "unattended-upgrades" (install security updates automatically), or
## "landscape" (manage system with Landscape).
d-i pkgsel/update-policy select none

## Some versions of the installer can report back on what software you have
## installed, and what software you use. The default is not to report back,
## but sending reports helps the project determine what software is most
## popular and include it on CDs.
##popularity-contest popularity-contest/participate boolean false

## By default, the system's locate database will be updated after the
## installer has finished installing most packages. This may take a while, so
## if you don't want it, you can set this to "false" to turn it off.
##d-i pkgsel/updatedb boolean true

###### Boot loader installation
## Grub is the default boot loader (for x86). If you want lilo installed
## instead, uncomment this:
##d-i grub-installer/skip boolean true
## To also skip installing lilo, and install no bootloader, uncomment this
## too:
##d-i lilo-installer/skip boolean true

## With a few exceptions for unusual partitioning setups, GRUB 2 is now the
## default. If you need GRUB Legacy for some particular reason, then
## uncomment this:
##d-i grub-installer/grub2_instead_of_grub_legacy boolean false

## This is fairly safe to set, it makes grub install automatically to the MBR
## if no other operating system is detected on the machine.
d-i grub-installer/only_debian boolean true

## This one makes grub-installer install to the MBR if it also finds some other
## OS, which is less safe as it might not be able to boot that other OS.
d-i grub-installer/with_other_os boolean true

## Alternatively, if you want to install to a location other than the mbr,
## uncomment and edit these lines:
##d-i grub-installer/only_debian boolean false
##d-i grub-installer/with_other_os boolean false
##d-i grub-installer/bootdev  string (hd0,0)
## To install grub to multiple disks:
##d-i grub-installer/bootdev  string (hd0,0) (hd1,0) (hd2,0)

## Optional password for grub, either in clear text
##d-i grub-installer/password password r00tme
##d-i grub-installer/password-again password r00tme
## or encrypted using an MD5 hash, see grub-md5-crypt(8).
##d-i grub-installer/password-crypted password [MD5 hash]

## Use the following option to add additional boot parameters for the
## installed system (if supported by the bootloader installer).
## Note: options passed to the installer will be added automatically.
d-i debian-installer/add-kernel-opts string nousb ipv6.disable=1

###### Finishing up the installation
## During installations from serial console, the regular virtual consoles
## (VT1-VT6) are normally disabled in /etc/inittab. Uncomment the next
## line to prevent this.
##d-i finish-install/keep-consoles boolean true

## Avoid that last message about the install being complete.
d-i finish-install/reboot_in_progress note

## This will prevent the installer from ejecting the CD during the reboot,
## which is useful in some situations.
d-i cdrom-detect/eject boolean false

## This is how to make the installer shutdown when finished, but not
## reboot into the installed system.
##d-i debian-installer/exit/halt boolean true
## This will power off the machine instead of just halting it.
##d-i debian-installer/exit/poweroff boolean true

###### Preseeding other packages
## Depending on what software you choose to install, or if things go wrong
## during the installation process, it's possible that other questions may
## be asked. You can preseed those too, of course. To get a list of every
## possible question that could be asked during an install, do an
## installation, and then run these commands:
##   debconf-get-selections --installer > file
##   debconf-get-selections >> file


######## Advanced options
###### Running custom commands during the installation
## d-i preseeding is inherently not secure. Nothing in the installer checks
## for attempts at buffer overflows or other exploits of the values of a
## preconfiguration file like this one. Only use preconfiguration files from
## trusted locations! To drive that home, and because it's generally useful,
## here's a way to run any shell command you'd like inside the installer,
## automatically.

## create static network configuration.
## I am using the cheetah engine to create the string so d-i preseed/late_command is easier to digest
#set $lo = '\\nauto lo\\n iface lo inet loopback\\n'
## the interfaces, we do only have eth0 and only use IPv4:
#try
#set $eth0_ipv4 = '\\nauto eth0\\niface eth0 inet static\\n address %s\\n netmask %s\\n gateway %s\\n dns-search %s\\n dns-nameservers %s' % ($interfaces['eth0']['ip_address'], $interfaces['eth0']['netmask'], $gateway, " ".join ($name_servers_search), " ".join($name_servers))
#except
#set $eth0_ipv4 = '\\nauto eth0\\niface eth0 inet dhcp'
#end try
## Finally, create the internal network interface:
#set $interfaces_config = $lo+$eth0_ipv4
#set ipv6_config = 'net.ipv6.conf.all.disable_ipv6=1\\nnet.ipv6.conf.default.disable_ipv6=1\\nnet.ipv6.conf.lo.disable_ipv6=1'

## start puppet in the specified stage
#set $puppet_run = "/usr/bin/puppet agent -t --server %s --logdest /var/log/puppet --rundir /var/run/puppet --ssldir /var/lib/puppet/ssl --runinterval 99999999 --classfile /var/lib/puppet/classes.txt --localconfig /var/lib/puppet/localconfig --report true --pluginsync true --ignorecache true --environment %s" % ($puppet_server, $stage)


## disable netboot
#set $nopxe = "/bin/echo -e pxe_still_enabled"
#if $pxe_just_once in [1, "1", "true", "yes", "y"]
#set nopxe = "wget \"http://%s/cblr/svc/op/nopxe/system/%s\" -O /dev/null" % ($http_server, $system_name)
#end if

## This first command is run as early as possible, just after
## preseeding is read.
##d-i preseed/early_command string\
## This command is run immediately before the partitioner starts. It may be
## useful to apply dynamic partitioner preseeding that depends on the state
## of the disks (which may not be visible when preseed/early_command runs).
##d-i partman/early_command \
##       string debconf-set partman-auto/disk "$(list-devices disk | head -n1)"
## This command is run just before the install finishes, but when there is
## still a usable /target directory. You can chroot to /target and use it
## directly, or use the apt-install and in-target commands to easily install
## packages and run commands in the target system.
##d-i preseed/late_command string apt-install zsh; in-target chsh -s /bin/zsh
## $interface_config is written twice, because if an error occurs (for example the puppet run)
## the install scripts do not copy /etc/network/interfaces to /target/etc/network/interfaces
d-i preseed/late_command string \
/bin/echo -e "$interfaces_config" > /etc/network/interfaces;\
/bin/echo -e "$interfaces_config" > /target/etc/network/interfaces;\
/bin/echo -e "$ipv6_config" >> /target/etc/sysctl.conf;\
$nopxe;\
#if $run_puppet == "true"
in-target $puppet_run;
#else
/bin/echo -e "We are done here";
#end if